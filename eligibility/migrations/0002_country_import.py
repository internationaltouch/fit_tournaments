# Generated by Django 3.2.16 on 2022-12-27 23:34

import requests
from django.db import migrations


def country_import(apps, schema_editor):
    Country = apps.get_model("eligibility", "Country")

    try:
        res = requests.get(
            "https://www.internationaltouch.org/api/v1/clubs/",
            headers={
                "Accept": "application/json",
                "User-Agent": "tournaments.fit/0.1",
            },
            timeout=2,
        )
        res.raise_for_status()
        api_data = res.json()
    except requests.RequestException:  # noqa
        api_data = [
            {"abbreviation": "AUS", "title": "Australia"},
            {"abbreviation": "BEL", "title": "Belgium"},
            {"abbreviation": "BGR", "title": "Bulgaria"},
            {"abbreviation": "CAN", "title": "Canada"},
            {"abbreviation": "CHE", "title": "Switzerland"},
            {"abbreviation": "COK", "title": "Cook Islands"},
            {"abbreviation": "CZE", "title": "Czech Republic"},
            {"abbreviation": "DEU", "title": "Germany"},
            {"abbreviation": "ENG", "title": "England"},
            {"abbreviation": "ESP", "title": "Spain"},
            {"abbreviation": "FJI", "title": "Fiji"},
            {"abbreviation": "FRA", "title": "France"},
            {"abbreviation": "HKG", "title": "Hong Kong"},
            {"abbreviation": "IRE", "title": "Ireland"},
            {"abbreviation": "ITA", "title": "Italy"},
            {"abbreviation": "JPN", "title": "Japan"},
            {"abbreviation": "LUX", "title": "Luxembourg"},
            {"abbreviation": "MYS", "title": "Malaysia"},
            {"abbreviation": "NLD", "title": "Netherlands"},
            {"abbreviation": "NZL", "title": "New Zealand"},
            {"abbreviation": "PHL", "title": "Philippines"},
            {"abbreviation": "PNG", "title": "Papua New Guinea"},
            {"abbreviation": "SCO", "title": "Scotland"},
            {"abbreviation": "SGP", "title": "Singapore"},
            {"abbreviation": "SWE", "title": "Sweden"},
            {"abbreviation": "THA", "title": "Thailand"},
            {"abbreviation": "TON", "title": "Tonga"},
            {"abbreviation": "USA", "title": "United States of America"},
            {"abbreviation": "WAL", "title": "Wales"},
            {"abbreviation": "WSM", "title": "Samoa"},
        ]

    # Unfortunately, we need to special case a few out of the API response.
    exceptions = {
        "CAT",  # Catalonia isn't a country, and should never have been a FIT member
        "NFK",  # Norfolk Island isn't a country, and should never have been a FIT member
        "MET",  # Middle East Touch is UAE because of political reasons
        "EUR",  # Europe is a special case for invitational teams
        "GBR",  # Great Britain is a special case for invitational teams
    }

    instances = [
        Country(iso3166a3=each["abbreviation"], name=each["title"])
        for each in api_data
        if each["abbreviation"] not in exceptions
    ]

    # Now we need to add back UAE.
    instances.append(Country(iso3166a3="UAE", name="United Arab Emirates"))

    Country.objects.bulk_create(instances)


def noop(apps, schema_editor):
    pass


class Migration(migrations.Migration):
    dependencies = [
        ("eligibility", "0001_initial"),
    ]

    operations = [migrations.RunPython(country_import, noop)]
